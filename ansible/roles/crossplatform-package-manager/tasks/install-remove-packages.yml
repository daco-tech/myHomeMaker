---
- name: Install additional software packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ install_packages }}"
  when:
    - ansible_facts['system'] == "Linux"

- name: Install Linux software packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ install_linux_packages }}"
  when:
    - (ansible_os_family == 'Debian') or (ansible_os_family == 'Parrot OS')

- name: Install Debian Linux software packages
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ install_debian_linux_packages }}"
  when:
    - (ansible_os_family == 'Debian') or (ansible_os_family == 'Parrot OS')

- name: Install AUR packages
  become: true
  command: /usr/bin/yay -S --noconfirm {{ item }}
  with_items: "{{ install_linux_packages }}"
  when:
    - (ansible_os_family == 'Archlinux')

- name: Install Arch Linux AUR packages
  command: /usr/bin/yay -S --noconfirm {{ item }}
  with_items: "{{ install_arch_linux_aur_packages }}"
  when:
    - (ansible_os_family == 'Archlinux')

- name: Remove specified software packages
  become: true
  package:
    name: "{{ item }}"
    state: absent
  with_items: "{{ remove_linux_packages }}"
  when:
    - ansible_facts['system'] == "Linux"

- name: Install homebrew packages
  homebrew:
    name: "{{ item }}"
    state: latest
  with_items: "{{ install_packages }}"
  when:
    - ansible_facts['system'] == "Darwin"

- name: Install homebrew mac only packages
  homebrew:
    name: "{{ item }}"
    state: latest
  with_items: "{{ install_mac_packages }}"
  when:
    - ansible_facts['system'] == "Darwin"

#- name: Install homebrew cask packages
#  homebrew_cask:
#    name: "{{ item }}"
#    state: present
#    #upgrade_all: "yes"
#  with_items: "{{ install_mac_cask_packages }}"
#  when:
#    - ansible_facts['system'] == "Darwin"

- name: Install homebrew cask packages
  #become: true
  command: brew install --cask {{ item }}
  with_items: "{{ install_mac_cask_packages }}"
  when:
    - ansible_facts['system'] == "Darwin"

- name: Uninstall homebrew packages
  homebrew:
    name: "{{ item }}"
    state: absent
  with_items: "{{ remove_mac_packages }}"
  when:
    - ansible_facts['system'] == "Darwin"
